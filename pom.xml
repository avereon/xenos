<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.avereon.pom</groupId>
		<artifactId>jar</artifactId>
		<version>3.6.4</version>
	</parent>

	<groupId>com.avereon</groupId>
	<artifactId>xenos</artifactId>
	<version>0.11-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Xenos</name>
	<description>
		Xenos is the user interface test library provided for testing Xenon modules.
		This library provides a set of test utilities and a test runner for running
		modules in a test Xenon environment so module developers don't need to do it
		for themselves. Xenos is compatible with Xenon 8.0 and above.
	</description>
	<inceptionYear>2020</inceptionYear>

	<developers>
		<developer>
			<name>Mark Soderquist</name>
			<email>mark@soderquist.net</email>
			<roles>
				<role>Architect</role>
			</roles>
		</developer>
	</developers>

	<repositories>
		<repository>
			<id>avn</id>
			<url>https://repo.avereon.com/avn</url>
		</repository>
	</repositories>

	<properties>
		<!-- Version numbers updated 28 Apr 2025 -->

		<product-name>${project.name}</product-name>
		<product-identifier>${project.artifactId}</product-identifier>
		<project-timestamp>${maven.build.timestamp}</project-timestamp>

		<!-- Needs to be the same version as Xenon -->
		<!-- Keep consistent with the CI pipeline -->
		<java.version>24</java.version>

		<!-- Runtime dependencies -->
		<xenon.version>1.9-SNAPSHOT</xenon.version>
		<testfx.version>4.0.18</testfx.version>
		<mockito.version>5.20.0</mockito.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.avereon</groupId>
			<artifactId>xenon</artifactId>
			<version>${xenon.version}</version>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-core</artifactId>
			<version>${testfx.version}</version>
			<exclusions>
				<!-- Exclude the openjfx libraries, they are already available -->
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-junit5</artifactId>
			<version>${testfx.version}</version>
			<exclusions>
				<!-- Exclude the junit-jupiter libraries, they are already available-->
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<!-- Exclude the openjfx libraries, they are already available -->
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- This configuration allows the JUnit test runner to find the unit tests -->
				<configuration>
					<argLine>
						--add-opens=com.avereon.xenos/com.avereon.xenos.test=ALL-UNNAMED
					</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<failOnError>false</failOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>

